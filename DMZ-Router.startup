#assign IP addresses to the interfaces
ip addr add 50.0.0.2/29 dev eth0  
ip link set up dev eth0

ip addr add 80.64.0.1/29 dev eth1
ip link set up dev eth1

#Setup the routes
ip route add 50.0.0.0/29 via 50.0.0.2
ip route add 80.64.1.0/29 via 80.64.0.2
ip route add 80.64.2.0/29 via 80.64.0.3
ip route add 20.30.40.0/30 via 50.0.0.1


#Iptable firewall rules
iptables -F #flush previous rules
iptables -P FORWARD DROP #default policy drop


iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT #iptables rule for existing connections


iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT #allow traffic to internet from internal network


iptables -t nat -A POSTROUTING -o eth0 -j SNAT --to-source 50.0.0.2 #security measure to change IP of all internal machines to the router public facing IP address

iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 1194 -j DNAT --to-destination 80.64.2.6 #DNAT rule to change the destination IP of the packet to the OpenVPN server machine for traffic on port 1194
iptables -t nat -A PREROUTING -i eth0 -p tcp -m multiport --dports 25,587,993,4444 -j DNAT --to-destination 80.64.2.3 #DNAT rule to change the destination IP of the packet to the Mail server for traffic on ports 25, 587 and 993; port 4444 was used for testing purposes


iptables -A FORWARD -p tcp -m multiport --dports 25,587,993,1194,4444 -j ACCEPT # accept traffic coming in that has destination ports of 25,587,993,1194; again 4444 was used for testing the effectiveness of the firewall rules


iptables -A FORWARD -i eth0 ! -o eth1 -j DROP #drop all traffic that is not destined for eth1 interface


iptables -P INPUT DROP #drop everything else